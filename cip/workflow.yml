workflow:
  # basic description of the workflow
  headers:
    name: "iocatcher"
    version: "0.0.0"
  
  # pre activities to install deps
  activities:
    yum_dependency:
      info: "Resolve dependencies"
      context:
        yum:
          # to build & run tests
          - name: "cmake"
          - name: "gcc"
          - name: "gcc-c++"
          # library deps to build
          #- name: "libfabric-devel"
          - name: "libevent-devel"
          # to get gcovr via pip
          - name: "python3"
          # to generate doc
          - name: "sphinx"
          - name: "python3-sphinx"
      stop_if_error: true
      disabled: false

    # commands to run
    shell:
      info: "Configure & Build & Run tests"
      context:
        cmdline:
          - label: "Install libfabric from source"
            cmd: "cd /tmp/ && wget https://github.com/ofiwg/libfabric/releases/download/v1.13.0/libfabric-1.13.0.tar.bz2 -O libfabric-1.13.0.tar.bz2 && tar -xf libfabric-1.13.0.tar.bz2 && cd libfabric-1.13.0 && ./configure && make && make install"
          - label: "Configure"
            cmd: "cd ${BUILDDIR} && ${SRCDIR}/configure --enable-jenkins"
            user: "sf-user"
          - label: "Build"
            cmd: "cd ${BUILDDIR} && make"
            user: "sf-user"
          - label: "Build"
            cmd: "cd ${BUILDDIR} && make install"
          - label: "Run tests"
            cmd: "cd ${BUILDDIR} && ctest || echo 'Test failure'"
            user: "sf-user"
          - label: "Copy unit test results to export dir"
            cmd: "cd ${SRCDIR} && mkdir -p ${SRCDIR}/${EXPORT_DIR}/junit && cp -v $(find ${BUILDDIR}/ -iname '*.gtest.xml') ${SRCDIR}/${EXPORT_DIR}/junit"
            user: "sf-user"
          - label: "Install gcovr"
            cmd: "pip3 install gcovr"
            user: "root"
          - label: "Generate coverage xml report"
            cmd: "cd ${BUILDDIR} && mkdir -p ${SRCDIR}/${EXPORT_DIR}/coverage && gcovr ${BUILDDIR} -r ${SRCDIR} --filter ${SRCDIR}/src --xml --xml-pretty > ${SRCDIR}/${EXPORT_DIR}/coverage/gcovr.xml"
            user: "sf-user"
          - label: "Generate coverage html report"
            cmd: "cd ${BUILDDIR} && gcovr ${BUILDDIR} -r ${SRCDIR} --filter ${SRCDIR}/src --html > ${SRCDIR}/${EXPORT_DIR}/coverage/gcovr.html"
            user: "sf-user"
          - label: "Doxygen"
            cmd: "cd ${SRCDIR} && mkdir -p ${SRCDIR}/${EXPORT_DIR}/doc && doxygen Doxyfile && mv ./doxygen ${SRCDIR}/${EXPORT_DIR}/doc"
            user: "sf-user"
          - label: "Sphinx"
            cmd: "cd ${SRCDIR}/doc && mkdir -p ${SRCDIR}/${EXPORT_DIR}/doc && make html && mv ./_build/html ${SRCDIR}/${EXPORT_DIR}/doc/sphinx"
            user: "sf-user"
      stop_if_error : true
      disabled : false
